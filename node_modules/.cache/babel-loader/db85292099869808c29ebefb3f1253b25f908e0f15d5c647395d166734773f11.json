{"ast":null,"code":"var _jsxFileName = \"/Users/xiaoweiwu/Documents/GitHub/case-study/src/ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatComponent = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSendMessage = async () => {\n    // Make a request to the ChatGPT API with the user input\n    const response = await axios.post('https://api.openai.com/v1/chat/completions', {\n      messages: [{\n        role: 'system',\n        content: 'You are a helpful assistant.'\n      }, {\n        role: 'user',\n        content: input\n      }]\n    }, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `sk-proj-hBIoESuiWVcOHpbgboqpT3BlbkFJOqvaGA3x3lJLaN9Ea12T`\n      }\n    });\n\n    // Update the conversation history with the response from ChatGPT\n    setMessages([...messages, {\n      role: 'assistant',\n      content: response.data.choices[0].message.content\n    }]);\n\n    // Clear the input field\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.role,\n        children: message.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatComponent, \"Xhz1M2btVGAzY17pd7+8a34J2bk=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatComponent","_s","input","setInput","messages","setMessages","handleInputChange","e","target","value","handleSendMessage","response","post","role","content","headers","Authorization","data","choices","message","children","map","index","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/xiaoweiwu/Documents/GitHub/case-study/src/ChatComponent.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst ChatComponent = () => {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSendMessage = async () => {\n    // Make a request to the ChatGPT API with the user input\n    const response = await axios.post(\n      'https://api.openai.com/v1/chat/completions',\n      {\n        messages: [\n          { role: 'system', content: 'You are a helpful assistant.' },\n          { role: 'user', content: input },\n        ],\n      },\n      {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `sk-proj-hBIoESuiWVcOHpbgboqpT3BlbkFJOqvaGA3x3lJLaN9Ea12T`,\n        },\n      }\n    );\n\n    // Update the conversation history with the response from ChatGPT\n    setMessages([...messages, { role: 'assistant', content: response.data.choices[0].message.content }]);\n\n    // Clear the input field\n    setInput('');\n  };\n\n  return (\n    <div>\n      <div>\n        {messages.map((message, index) => (\n          <div key={index} className={message.role}>\n            {message.content}\n          </div>\n        ))}\n      </div>\n      <div>\n        <input type=\"text\" value={input} onChange={handleInputChange} />\n        <button onClick={handleSendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,iBAAiB,GAAIC,CAAC,IAAK;IAC/BJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC;IACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAC/B,4CAA4C,EAC5C;MACER,QAAQ,EAAE,CACR;QAAES,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAA+B,CAAC,EAC3D;QAAED,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAEZ;MAAM,CAAC;IAEpC,CAAC,EACD;MACEa,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAG;MAClB;IACF,CACF,CAAC;;IAED;IACAX,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAES,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAEH,QAAQ,CAACM,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACL;IAAQ,CAAC,CAAC,CAAC;;IAEpG;IACAX,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEJ,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EACGhB,QAAQ,CAACiB,GAAG,CAAC,CAACF,OAAO,EAAEG,KAAK,kBAC3BvB,OAAA;QAAiBwB,SAAS,EAAEJ,OAAO,CAACN,IAAK;QAAAO,QAAA,EACtCD,OAAO,CAACL;MAAO,GADRQ,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN5B,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACnB,KAAK,EAAEP,KAAM;QAAC2B,QAAQ,EAAEvB;MAAkB;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChE5B,OAAA;QAAQ+B,OAAO,EAAEpB,iBAAkB;QAAAU,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAhDID,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAkDnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}